<%- include('../layout/userheader', { user: user }) %>

<main class="main">
    <div class="page-header breadcrumb-wrap">
        <div class="container">
          <div class="breadcrumb">
            <a href="/" rel="nofollow">Home</a>
            <span></span> Pages
            <span></span> Account
          </div>
        </div>
      </div>

    <section class="pt-80 pb-100">
      <div class="container">
        <div class="row">
          <div class="col-lg-10 m-auto">
            <div class="row">
                <div class="col-md-4">

                <div class="dashboard-menu">
                    <ul class="nav flex-column" role="tablist">
                        <li class="nav-item">
                            <a class="nav-link active" id="dashboard-tab" data-bs-toggle="tab" href="/account" role="tab" aria-controls="dashboard" aria-selected="false"><i class="fi-rs-settings-sliders mr-10"></i>Dashboard</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" id="orders-tab" data-bs-toggle="tab" href="/ordersuccess" role="tab" aria-controls="orders" aria-selected="false"><i class="fi-rs-shopping-bag mr-10"></i>Orders</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" id="track-orders-tab" data-bs-toggle="tab" href="#track-orders" role="tab" aria-controls="track-orders" aria-selected="false"><i class="fi-rs-shopping-cart-check mr-10"></i>Track Your Order</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" id="address-tab" data-bs-toggle="tab" href="/useraddress" role="tab" aria-controls="address" aria-selected="true"><i class="fi-rs-marker mr-10"></i>My Address</a>
                        </li>
                        <li class="nav-item">
                          <a class="nav-link" href="/wallets"><i class="fi-rs-shopping-bag mr-10"></i>Wallets</a>
                        </li>
                        <li class="nav-item">
                          <a class="nav-link"  href="/coupons" ><i class="fi-rs-shopping-bag mr-10"></i>coupon</a>
                        </li>
                    </ul>
                </div>
                </div>
            

                <div class="col-md-8">
                  <div class="card">
                    <section class="content-body p-xl-4">
                        <div class="row">
                          <div class="col-lg-8">
                            <form action="/account" enctype="multipart/form-data" method="post"
                              onsubmit="return validationChecking()">
                              <div class="row">
  
                                <div class="row gx-3">
                                  <input type="hidden" name="user_id" value="<%=userData._id%>">
                                  <div class="col-12  mb-3">
                                    <label class="form-label">Name</label>
                                    <input class="form-control" name="name" value="<%=userData.name%>" id="user_name"
                                      type="text" placeholder="Type here">
                                    <div id="errorName" class="ms-2 text-danger"></div>
                                  </div>
  
                                  <div class="col-lg-12  mb-3">
                                    <label class="form-label">Email</label>
                                    <input class="form-control" type="email" name="email" value="<%=userData.email%>"
                                      id="user_email" placeholder="example@mail.com" disabled>
                                    <div id="errorMail" class="ms-2 text-danger"></div>
                                  </div>
                                  <div class="col-lg-12  mb-3">
                                    <label class="form-label">Phone</label>
                                    <input class="form-control" type="tel" name="mobile" value="<%=userData.phone%>"
                                      id="user_phone" placeholder="+1234567890">
                                    <div id="errorMobile" class="ms-2 text-danger"></div>
                                  </div>
                                </div>
                              </div>
                              <br>
                              <button class="btn btn-primary" type="submit">Save changes</button>
                            </form>
                          </div>
                          <div class="col-lg-4">
                            <form enctype="multipart/form-data" id="imageForm">
                              <div class="input-upload mb-3">
                                <% if (userData.image) { %>
                                  <img src="/assets/imgs/user/<%=userData.image %>"alt="" id="imgView1"
                                    style="width: 300px;">
                                  <% } else { %>
                                    <img src="/uploadimage.svg" alt="" id="imgView1" style="width: 300px;">
                                    <% } %>
                                      <input style="display: none;" class="form-data" type="file" name="image" id="input1"
                                        accept="image/png, image/jpeg, image/jpg">
                                      <label for="input1" class="btn btn-primary rounded font-md"
                                        style="cursor: pointer; margin-top: 10px;">
                                        <i class="fa-solid fa-upload"></i> Upload
                                        Image
                                      </label>
                              </div>
                              <div class="image-cropper mb-3" style="display:none; width: 300px;">
                                <img src="" id="croppedImg1" alt="">
                                <button type="button" id="saveButton1" class="btn btn-primary">Save</button>
                              </div>
                            </form>
                          </div>
                        </div>
                        <div>
                          <div class="col-md d-flex justify-content-end">
                            <article class="box m-3 bg-light d-flex">
                              <h5>Referral Code: <%= userData.referralCode %>
                              </h5>
                            </article>
                          </div>
                   
                        </div>
                      </section>
                  </div>
                </div>
            </div>
          </div>
        </div>
      
    </section>
  </main>
  <script src="https://cdn.jsdelivr.net/npm/cropperjs@1.6.1/dist/cropper.min.js"></script>

  <script>
    document.getElementById('input1').addEventListener('change', function (event) {
      let input = event.target;
      let reader = new FileReader();

      reader.onload = function () {
        let dataURL = reader.result;
        let image = document.getElementById('imgView1');
        image.src = dataURL;

        // Initialize Cropper.js on the image
        let cropper = new Cropper(image, {
          aspectRatio: 1,
          viewMode: 1,
          guides: true,
          background: false,
          autoCropArea: 1,
          zoomable: true
        });

        // Show the image cropper container
        let cropperContainer = document.querySelector('.image-cropper');
        cropperContainer.style.display = 'block';

        // Update the cropped image when the "Save" button is clicked
        let saveButton = document.getElementById('saveButton1');
        saveButton.addEventListener('click', function () {
          // Get the cropped canvas data
          const canvas = cropper.getCroppedCanvas();

          if (!canvas) {
            return;
          }

          // Convert the canvas to a Blob (in this case, to a JPEG file with quality 1.0)
          canvas.toBlob(blob => {
            const formData = new FormData();
            formData.append('croppedImage', blob, 'cropped-image.jpg');

            // Append any other necessary data to the form (if needed)
            // formData.append('otherField', otherValue);

            // Submit the form data to the backend using Fetch API or XMLHttpRequest
            fetch('/updateprofilepic', {
              method: 'POST',
              body: formData
            })
              .then(response => {
                console.log("hghjg")
                if (response.ok) {
                  console.log('Cropped image submitted successfully!');
                  window.location.reload();
                } else {
                    console.log("hghjgdfdfdf")

                  console.error('Failed to submit cropped image.');
                  // Optionally, handle failed submission
                }
              })
              .catch(error => {
                console.error('Error submitting cropped image:', error);
              });
          }, 'image/jpeg'); // Set the desired image format here
        });
      };
      reader.readAsDataURL(input.files[0]);
    });
  </script>
  <script>
    document.addEventListener('DOMContentLoaded', function () {
        // Function to handle image preview when a file is selected
        document.getElementById('fileUpload').addEventListener('change', function (event) {
            const file = event.target.files[0];
            if (file) {
                const reader = new FileReader();
                reader.onload = function (e) {
                    document.getElementById('previewImage').src = e.target.result;
                };
                reader.readAsDataURL(file);
            }
        });

        // Function to perform input validation on form submission
        document.getElementById('userForm').addEventListener('submit', function (event) {
            event.preventDefault(); // Prevent form submission for now

            // Get form input elements and error message elements
            const user_name = document.getElementById("user_name");
            const errorName = document.getElementById("errorName");
            const user_phone = document.getElementById("user_phone");
            const errorMobile = document.getElementById("errorMobile");
            const fileUpload = document.getElementById("fileUpload");
            const errorfileUpload = document.getElementById("errorfileUpload");

            // Validate user name
            errorName.innerHTML = user_name.value.trim() === "" ? "Please enter user name" : /^[a-zA-Z ]+$/.test(user_name.value) === false ? "Please enter alphabets only" : "";

            // Validate user phone number
            errorMobile.innerHTML = user_phone.value.trim() === "" ? "Please enter user phone number" : /^\d{10}$/.test(user_phone.value) === false ? "Please enter valid phone number" : "";

            // Validate uploaded file
            const uploadedFile = fileUpload.files[0];
            const allowedTypes = ["image/jpeg", "image/png", "image/gif", "image/bmp", "image/webp"];
            errorfileUpload.innerHTML = uploadedFile && !allowedTypes.includes(uploadedFile.type) ? "Please upload a valid image file (JPEG, PNG, GIF)" : "";

            // If all validations pass, submit the form
            if (!errorName.innerHTML && !errorMobile.innerHTML && !errorfileUpload.innerHTML) {
                event.target.submit();
            }
        });
    });
</script>

  <script>
    // Initialize Cropper for each image
    const croppers = [];
    const inputFields = document.querySelectorAll('.form-data');

    inputFields.forEach((input, index) => {
        input.addEventListener('change', function () {
            const file = this.files[0];
            const reader = new FileReader();

            reader.onload = function (e) {
                const img = document.createElement('img');
                img.src = e.target.result;

                const imageWrapper = document.createElement('div');
                imageWrapper.classList.add('image-cropper');
                imageWrapper.style.width = '300px';
                imageWrapper.style.display = 'block';

                const previewDiv = document.createElement('div');
                previewDiv.classList.add('preview-image');
                previewDiv.style.overflow = 'hidden';
                previewDiv.style.width = '300px';
                previewDiv.style.height = '200px';
                previewDiv.appendChild(img);
                imageWrapper.appendChild(previewDiv);

                const saveButton = document.createElement('button');
                saveButton.innerText = 'Save';
                saveButton.classList.add('btn', 'btn-primary');
                saveButton.style.marginTop = '10px';
                saveButton.addEventListener('click', function () {
                    const canvas = croppers[index].getCroppedCanvas();
                    if (canvas) {
                        const croppedImg = canvas.toDataURL(); // Get the cropped image as base64 string
                        const imgView = document.getElementById(`imgView${index + 1}`);
                        imgView.src = croppedImg; // Update the image src with cropped image
                    }
                });
                imageWrapper.appendChild(saveButton);

                document.getElementById(`imgView${index + 1}`).style.display = 'none';
                document.getElementById(`saveButton${index + 1}`).style.display = 'block';
                document.getElementById(`croppedImg${index + 1}`).appendChild(imageWrapper);

                croppers[index] = new Cropper(img, {
                    aspectRatio: 1, // You can set your desired aspect ratio here
                    viewMode: 1,
                });
            };

            reader.readAsDataURL(file);
        });
    });
</script>





