<%- include('../layout/userheader', { user: user }) %>

<style>
    .empty-cart-container {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    text-align: center;
    width: 100%;
}

.empty-cart-text {
    margin-bottom: 20px;
}

.btn-continue-shopping {
    margin-top: 20px;
}
</style>

<main class="main">
    <div class="page-header breadcrumb-wrap">
        <div class="container">
            <div class="breadcrumb">
                <a href="/" rel="nofollow">Home</a>
                <span></span> Pages
                <span></span> Cart
            </div>
        </div>
    </div>
    
    <section class="mt-50 mb-50">
        <div class="container">
            <div class="row">
                <div class="col-12">
                    <% if (cart.length > 0) { %>
                    <div class="table-responsive">
                        <table class="table shopping-summery text-center clean">
                            <thead>
                                <tr class="main-heading">
                                    <th scope="col">Image</th>
                                    <th scope="col">Name</th>
                                    <th scope="col">Price</th>
                                    <th scope="col">Quantity</th>
                                    <th scope="col">Subtotal</th>
                                    <th scope="col">Remove</th>
                                </tr>
                            </thead>
                            <tbody>
                                    <div class="table-responsive">
                                        <table class="table">
                                            <thead>
                                                <tr>
                                                    <th class="image" scope="col">Image</th>
                                                    <th class="product-des" scope="col">Product</th>
                                                    <th class="price" scope="col">Price</th>
                                                    <th class="text-center" scope="col">Quantity</th>
                                                    <th class="price" scope="col">Size</th>
                                                    <th class="text-right" scope="col">Total</th>
                                                    <th scope="col">Action</th>
                                                </tr>
                                            </thead>
                                            <tbody>
                                                <% cart.forEach((cartData, index) => { %>
                                                    <!-- Cart Row -->
                                                    <tr>
                                                        <td class="image product-thumbnail"><img src="/assets/imgs/productIMG/<%= cartData.product.image[0] %>" alt="#"></td>
                                                        <td class="product-des product-name"><%= cartData.product.name %></td>
                                                        <td class="price" data-title="Price">
                                                            <% if (cartData.product.discountPrice && cartData.product.discountStatus && new Date(cartData.product.discountStart) <= new Date() && new Date(cartData.product.discountEnd) >= new Date()) { %>
                                                                <span><%= cartData.product.discountPrice %></span>
                                                            <% } else { %>
                                                                <span><%= cartData.product.price %></span>
                                                            <% } %>
                                                        </td>
                                                        <td class="text-center" data-title="Stock">
                                                            <div class="cart-product-quantity">
                                                                <% const maxQuantity= Math.min(cartData.product.stock,10);%>
                                                                <input type="number" class="form-control" name="qty" value="<%= cartData.quantity %>" min="1" max="10" step="1" data-decimals="0" required onchange="updateCart('<%= cartData.product._id %>', this.value,'<%=cartData.size%>')">
                                                            </div>
                                                        </td>
                                                        <td class="price" data-title="Size"><span><%= cartData.size %></span></td>
                                                        <td class="text-right" data-title="Cart"><p id="subTot<%= cartData.product._id %>"><%= productTotal[index] %></p></td>
                                                        <td>
                                                            <button type="button" onclick="confirmRemoveCartItem('<%= cartData.product._id %>');">
                                                                <i class="fi-rs-trash"></i>
                                                            </button>
                                                        </td>
                                                    </tr>
                                                    <!-- End Cart Row -->
                                                <% }); %>
                                
                                                <!-- Clear Cart Button -->
                                                
                                            </tbody>
                                        </table>
                                    </div>
                                
                                    <!-- Cart Action Buttons -->
                                    <div class="cart-action text-end">
                                        <a class="btn btn-continue-shopping"><i class="fi-rs-shopping-bag mr-10"></i>Continue Shopping</a>

                                    </div>
                                
                                    <!-- Cart Totals -->
                                    <div class="row mb-50">
                                        <div class="col-lg-6 col-md-12"></div>
                                        <div class="col-lg-6 col-md-12">
                                            <div class="border p-md-4 p-30 border-radius cart-totals">
                                                <div class="heading_s1 mb-3">
                                                    <h4>Cart Totals</h4>
                                                </div>
                                                <div class="table-responsive">
                                                    <table class="table">
                                                        <tbody>
                                                            <tr>
                                                                <td class="cart_total_label">Cart Subtotal</td>
                                                                <td class="cart_total_amount"><span class="font-lg fw-900 text-brand checkout-Total" id="checkoutTot"><%= subtotalwithshipping %></span></td>
                                                            </tr>
                                                            <tr>
                                                                <td class="cart_total_label">Shipping</td>
                                                                <td class="cart_total_amount"><i class="ti-gift mr-5"></i> Free Shipping</td>
                                                            </tr>
                                                            <tr>
                                                                <td class="cart_total_label">Total</td>
                                                                <td class="cart_total_amount"><strong><span class="font-xl fw-900 text-brand checkout-Total" id="newTot"><%= subtotalwithshipping %></span></strong></td>
                                                            </tr>
                                                        </tbody>
                                                    </table>
                                                </div>
                                
                                                    <a href="/checkout" class="btn btn-primary">
                                                        <i class="fi-rs-box-alt mr-10"></i> Proceed To CheckOut
                                                    </a>
                                              
                                            </div>
                                        </div>
                                    </div>
                                    <% } else { %>
                                        <!-- Display "Cart is empty" heading when the cart is empty -->
                                        <div class="empty-cart-container">
                                           <!-- Text Content -->
                                                <div class="empty-cart-text">
                                                    <h3>Cart is Empty</h3>
                                                    <p>Explore our collection and add items to your cart.</p>
                                                </div>
                                                 <!-- Continue Shopping Button -->
                                                <a href="/" class="btn btn-continue-shopping">Continue Shopping</a>
                                        </div>
                                        
                                    <% } %>
                                
    </section>
</main>

<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script>
    function confirmRemoveCartItem(productId) {
        Swal.fire({
            title: "Are you sure?",
            text: "You won't be able to revert this!",
            icon: "warning",
            showCancelButton: true,
            confirmButtonColor: "#3085d6",
            cancelButtonColor: "#d33",
            confirmButtonText: "Yes",
        }).then((result) => {
            if (result.isConfirmed) {
                // User clicked "Yes," so proceed with removing the item
                removeCartItem(productId);
            }
        });
    }

    function removeCartItem(productId) {
        fetch(`/removefromcart?productId=${productId}`, {
            method: 'DELETE',
        })
        .then(response => response.json())
        .then(data => {
            if (data.success) {
                // Update UI elements to reflect changes
                const removedElement = document.querySelector(`tr[data-product-id="${productId}"]`);
                if (removedElement) {
                    removedElement.remove();

                }
                localStorage.setItem('productRemoved', 'true');
                location.reload();

            } else {
                console.error('Failed to remove cart item:', data.error);
            }
        })
        .catch(error => {
            console.error('Error removing cart item:', error);
        });
    }

    // Add event listener to quantity inputs
$(document).on('change', 'input[name="qty"]', function() {
    const productId = $(this).closest('tr').data('product-id');
    const newQuantity = $(this).val();
    const newSize = $(this).closest('tr').find('.size').text(); // Assuming size is stored in a <td> element with class "size"

    updateCart(productId, newQuantity, newSize);
});

// function updateCart(productId, newQuantity, newSize) {
//     const requestData = {
//         newQuantity,
//         newSize
//     };

//     const maxQuantity = parseInt(this.getAttribute('max'));

//     if (newQuantity > maxQuantity) {
//         alert('Exceeds available Stock!');
//         this.value = maxQuantity;
//     }

//     $.ajax({
//         url: `/updatecart?productId=${productId}`,
//         type: 'PUT',
//         contentType: 'application/json',
//         data: JSON.stringify(requestData),
//         success: function(data) {
//             if (data.success) {
//                 // Update UI elements without reloading the page
//                 const subtotalSelector = `tr[data-product-id="${productId}"] .text-right span`;
//                 const subtotalElement = $(subtotalSelector);

//                 if (subtotalElement.length > 0) {
//                     subtotalElement.text(data.subtotal); // Update subtotal value returned from the server
//                 } else {
//                     console.error('Subtotal element not found');
//                 }
//             } else {
//                 // Handle error cases
//                 const errorMessage = data.error || 'Unknown error occurred';
//                 console.error('Failed to update cart:', errorMessage);
//             }
//         },
//         error: function(error) {
//             console.error('Error updating cart:', error);
//         }
//     });
// }
function updateCart(productId, newQuantity, newSize) {
    const requestData = {
        newQuantity,
        newSize
    };

    fetch(`/updatecart?productId=${productId}`, {
        method: 'PUT',
        headers: {
            'Content-Type': 'application/json',
        },
        body: JSON.stringify(requestData),
    })
    .then(response => response.json())
    .then(data => {
        if (data.success) {
            console.log(data, "from update cart");
            const total = document.querySelector('#checkoutTot')
            const newTotal =document.querySelector('#newTot')
            const subtotal = document.getElementById(`subTot${productId}`);
            subtotal.innerHTML = data.subtotal;
                newTotal.innerHTML =data.total
                total.innerText = data.total
             

                // const productTotalElement = document.querySelector(`tr[data-product-id="${productId}"] .text-right span`);
                // console.log(productTotalElement, "productTotalElement from update cart")
                const quantityInputElement = document.querySelector(`tr[data-product-id="${productId}"] input[name="qty"]`);
                // console.log(quantityInputElement, "quantityInputElement from update cart")
                // location.reload();
            
            if (productTotalElement && quantityInputElement) {
                    // productTotalElement.textContent = data.subtotal; // Update product total
                    quantityInputElement.value = data.newQuantity; // Update quantity input value
                } else {
                    console.error('One or more elements not found');
                }
        } else {
            // Handle error cases
            const errorMessage = data.error || 'Unknown error occurred';
            console.error('Failed to update cart:', errorMessage);
        }
        // Check if there's a cart validation message
        if (data.validationError) {
            // Display validation error message to the user
            alert(data.validationError);
        }
    })
    .catch(error => {
        console.error('Error updating cart:', error);
    });
}
    
</script>





